generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../node_modules/@generated/typegraphql"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  CAPTAIN
  OWNER
}

enum Suit {
  Clubs
  Diamonds
  Hearts
  Spades
  Joker
}

enum Rank {
  Ace
  One
  Two
  Three
  Four
  Five
  Six
  Seven
  Eight
  Nine
  Ten
  Jack
  Queen
}

enum PlayerStatus {
  ACTIVE
  OWES_CARD
  DROPPED
  WON
  LOST
}

enum MoveType {
  Drop
  TakeOpen
  TakeFromDeck
  ReturnExtraCard
  Show
}

model User {
  id             Int     @id @default(autoincrement())
  username       String  @unique
  email          String  @unique
  name           String
  roles          Role[]
  emailVerified  Boolean
  /// @TypeGraphQL.omit(output: true)
  hashedPassword String?
  /// @TypeGraphQL.omit(output: true)
  salt           String?
  /// @TypeGraphQL.omit(output: true)
  idToken        String?
  /// @TypeGraphQL.omit(output: true)
  accessToken    String?
  /// @TypeGraphQL.omit(output: true)
  refreshToken   String?
  /// @TypeGraphQL.omit(output: true)
  jwt            String?

  @@map("identitity")
}
